@page "/update/{id}"

@using ToDoCrudBlazor.Models
@inject NavigationManager NavigationManager;
@inject ToDoCrudBlazor.Services.ICompanyService CompanyService;

<h1>Atualizar tarefa</h1>

<EditForm Model="company" OnValidSubmit="UpdateCompany">
    <div class="form-group mb-3">
        <label for="companyName">Criado em:</label>
        <input @bind="company.StartDate" format-value="yyyy-MM-dd" />
    </div>
    <div class="form-group mb-3">
        <label for="companyEmail">Email</label>
        <InputText @bind-Value="company.Email" class="form-control" id="companyEmail" />
    </div>
    <div class="form-group mb-3">
        <label for="companyName">Prioridade</label>
        <InputText @bind-Value="company.Prioridade" class="form-control" id="companyPrioridade" />
    </div>
    <div class="form-group mb-3">
        <label for="companyVencimento">Vencimento</label>
        <input @bind="company.Vencimento" format-value="yyyy-MM-dd" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Salvar</button>

</EditForm>

@code {
    Company company = new();

    [Parameter] public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        company = await CompanyService.GetBy(Guid.Parse(id));
    }

    async Task UpdateCompany()
    {
        await CompanyService.Update(company);

        NavigationManager.NavigateTo("/");
    }
}